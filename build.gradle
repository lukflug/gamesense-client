buildscript {
	repositories {
		jcenter()
		maven {
			name = 'forge'
			url = 'https://files.minecraftforge.net/maven'
		}
		maven {
			name = 'SpongePowered'
			url = 'https://repo.spongepowered.org/repository/maven-public/'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
		classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
		classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version project.modVersion
group project.modGroup

configurations {
    embed
    compile.extendsFrom(embed)
}

compileJava {
	sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
}

minecraft {
	mappings channel: 'stable', version: '39-1.12'
	runs {
		client {
			workingDirectory project.file('run')
			property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'
		}
	}
	/*version = project.forgeVersion
	runDir = 'run'
	mappings = project.mcpVersion
	coreMod = 'com.gamesense.mixin.GameSenseMixinLoader'
	makeObfSourceJar = false*/
	//coreMod = 'com.gamesense.mixin.GameSenseMixinLoader'
}

repositories {
	maven {
		name = 'spongepowered-repo'
		url = 'https://repo.spongepowered.org/repository/maven-public/'
	}
	maven {
		name = 'impactdevelopment-repo'
		url = 'https://impactdevelopment.github.io/maven/'
	}
	maven {
		name = 'swt-repo'
		url = "https://maven-eclipse.github.io/maven"
	}
	maven {
		name = 'jitpack.io'
		url = "https://jitpack.io"
	}
	maven {
		name = 'lukflug'
		url = 'https://lukflug.github.io/maven'
	}
	mavenCentral()
}

dependencies {
	minecraft('net.minecraftforge:forge:1.12.2-14.23.5.2854')
	shadow('org.spongepowered:mixin:0.7.4-SNAPSHOT') {
		exclude module: 'launchwrapper'
		exclude module: 'guava'
		exclude module: 'gson'
		exclude module: 'commons-io'
	}
	shadow('com.github.ZeroMemes:Alpine:1.5')
	shadow('net.jodah:typetools:0.5.0')
	shadow('com.googlecode.json-simple:json-simple:1.1.1')
	shadow('club.minnced:java-discord-rpc:2.0.1')
	shadow('com.lukflug:panelstudio:0.1.8')
	shadow('com.lukflug:panelstudio-mc12:0.1.8')
}

processResources {
	inputs.property 'version', project.version
	inputs.property 'mcversion', project.minecraftVersion

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'version': project.version, 'mcversion': project.minecraftVersion
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}

	rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    configurations = [project.configurations.shadow]
    exclude("dummyThing")
    exclude("LICENSE.txt")
    setClassifier("release")
}

mixin {
	defaultObfuscationEnv 'searge'
	add sourceSets.main, 'mixins.gamesense.refmap.json'
}

reobf {
	shadowJar {
		classpath = sourceSets.main.compileClasspath
	}
}

jar {
	from configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
	manifest {
		attributes(
			'MixinConfigs': 'mixins.gamesense.json',
			'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
			'TweakOrder': 0,
			'FMLCorePluginContainsFMLMod': 'true',
			'FMLCorePlugin': 'com.gamesense.mixin.GameSenseMixinLoader',
			'ForceLoadAsMod': 'true',
			'FMLAT': 'gamesense_at.cfg'
		)
	}
}

jar.dependsOn(shadowJar) 

